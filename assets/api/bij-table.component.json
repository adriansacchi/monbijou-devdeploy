{
  "type": "component",
  "name": "BijTableComponent",
  "selector": "bij-table",
  "description": [
    "Angular table component on the basis of the native HTML table element.",
    "<p>",
    "Table structure and its data rows are modelled in the template similar to model a native HTML table.<br>",
    "The model is projected into standard HTML table tags. However, only the rows visible in the viewport are actually rendered into the DOM.",
    "<p>",
    "It features the following functionality:",
    "<ul>",
    "<li>virtual scrolling</li>",
    "<li>support for infinite scrolling</li>",
    "<li>filtering</li>",
    "<li>sorting</li>",
    "</ul>",
    "Changes to the modelling structure are instantly detected. This allows for straight-forward implementation of responsive design by using Angular structural directives like *ngIf to adapt the column structure on dimension change.",
    "<p>",
    "Cell content is specified in the form of a <code class='html-tag'>ng-template</code>, and allows the usage of arbitrary HTML code.<br>",
    "Business objects can be bound to their respective rows to facilitate interaction and to implement custom filtering and sorting.",
    "<p>",
    "Due to limitation of HTML table, vertical scrolling works with discrete row steps, which may not be optimal for tall rows.",
    "<h2>Example usage:</h2>",
    "<div class='code-snippet'><xmp class='code'>",
    "<bij-table>\n",
    "  <bij-header>\n",
    "    <bij-title-cell><ng-template>Firstname</ng-template></bij-title-cell>\n",
    "    <bij-title-cell><ng-template>Lastname</ng-template></bij-title-cell>\n",
    "  </bij-header>\n",
    "\n",
    "  <bij-row *ngFor=\"let person of persons\">\n",
    "    <bij-cell><ng-template>{{person.firstname}}</ng-template></bij-cell>\n",
    "    <bij-cell><ng-template>{{person.lastname}}</ng-template></bij-cell>\n",
    "  </bij-row>\n",
    "</bij-table>",
    "</xmp></div>"
  ],
  "links": [
    { "label": "BijRowDirective", "url": "/api/bij-row.directive"},
    { "label": "BijHeaderDirective", "url": "/api/bij-header.directive"}
  ],
  "input": [
    {
      "name": "filter",
      "description": "Filters all rows which match the specified filter text in any of their cells.",
      "links": [
        { "label": "BijTitleCellDirective", "url": "/api/bij-title-cell.directive" },
        { "label": "FilterFn", "url": "/api/filter-fn" }
      ]
    },
    {
      "name": "trackBy",
      "description": [
        "Function used to determine the element identity.",
        "<p>",
        "The element identity is used to restore the visible viewport area and to restore the selection upon providing new data with its object references changed."
      ],
      "links": [
        { "label": "TrackByFunction", "url": "https://angular.io/api/core/TrackByFunction", "external": true }
      ]
    }
  ],
  "output": [
    {
      "name": "viewportChange",
      "description": "Emits an event upon a change of the visible client area in the viewport, e.g. when scrolling or resizing the component.",
      "links": [
        { "label": "ViewportChangeEvent", "url": "/api/viewport-change.event" }
      ]
    }
  ]
}
